// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mock_artifact is a generated GoMock package.
package artifact

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIArtifactRepositoryHandler is a mock of IArtifactRepositoryHandler interface.
type MockIArtifactRepositoryHandler struct {
	ctrl     *gomock.Controller
	recorder *MockIArtifactRepositoryHandlerMockRecorder
}

// MockIArtifactRepositoryHandlerMockRecorder is the mock recorder for MockIArtifactRepositoryHandler.
type MockIArtifactRepositoryHandlerMockRecorder struct {
	mock *MockIArtifactRepositoryHandler
}

// NewMockIArtifactRepositoryHandler creates a new mock instance.
func NewMockIArtifactRepositoryHandler(ctrl *gomock.Controller) *MockIArtifactRepositoryHandler {
	mock := &MockIArtifactRepositoryHandler{ctrl: ctrl}
	mock.recorder = &MockIArtifactRepositoryHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIArtifactRepositoryHandler) EXPECT() *MockIArtifactRepositoryHandlerMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIArtifactRepositoryHandler) Create() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Create")
}

// Create indicates an expected call of Create.
func (mr *MockIArtifactRepositoryHandlerMockRecorder) Create() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIArtifactRepositoryHandler)(nil).Create))
}

// RetrieveList mocks base method.
func (m *MockIArtifactRepositoryHandler) RetrieveList() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "RetrieveList")
}

// RetrieveList indicates an expected call of RetrieveList.
func (mr *MockIArtifactRepositoryHandlerMockRecorder) RetrieveList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveList", reflect.TypeOf((*MockIArtifactRepositoryHandler)(nil).RetrieveList))
}
