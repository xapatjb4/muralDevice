// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mock_artifact is a generated GoMock package.
package artifact

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIRepositoryHandler is a mock of IRepositoryHandler interface.
type MockIRepositoryHandler struct {
	ctrl     *gomock.Controller
	recorder *MockIRepositoryHandlerMockRecorder
}

// MockIRepositoryHandlerMockRecorder is the mock recorder for MockIRepositoryHandler.
type MockIRepositoryHandlerMockRecorder struct {
	mock *MockIRepositoryHandler
}

// NewMockIRepositoryHandler creates a new mock instance.
func NewMockIRepositoryHandler(ctrl *gomock.Controller) *MockIRepositoryHandler {
	mock := &MockIRepositoryHandler{ctrl: ctrl}
	mock.recorder = &MockIRepositoryHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRepositoryHandler) EXPECT() *MockIRepositoryHandlerMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIRepositoryHandler) Create(arg0 RepositoryModel) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Create", arg0)
}

// Create indicates an expected call of Create.
func (mr *MockIRepositoryHandlerMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIRepositoryHandler)(nil).Create), arg0)
}

// Delete mocks base method.
func (m *MockIRepositoryHandler) Delete(arg0 DeleteModel) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Delete", arg0)
}

// Delete indicates an expected call of Delete.
func (mr *MockIRepositoryHandlerMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockIRepositoryHandler)(nil).Delete), arg0)
}

// RetrieveList mocks base method.
func (m *MockIRepositoryHandler) RetrieveList(arg0, arg1 int64) []RepositoryModel {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RetrieveList", arg0, arg1)
	ret0, _ := ret[0].([]RepositoryModel)
	return ret0
}

// RetrieveList indicates an expected call of RetrieveList.
func (mr *MockIRepositoryHandlerMockRecorder) RetrieveList(arg0, arg1 int64) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RetrieveList", reflect.TypeOf((*MockIRepositoryHandler)(nil).RetrieveList), arg0, arg1)
}
